@{
    ViewBag.Title = "Summary";
    ViewBag.CurrentPage = "Summary";
    Layout = "~/Views/Shared/_FTLayout.cshtml";
}
@section styles
{
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.dataTables.min.css">
}

@section scripts
{
    @Scripts.Render("~/bundles/d3")
    @Scripts.Render("~/bundles/tabledata")
}

@model FinancialThing.Models.SummaryViewModel

<table class="companies_table" id="companies_table">
    <thead>
        <tr data-bind="template: {name:'tableHeaderTemplate', foreach: headers}"></tr>
    </thead>
    <tbody data-bind="template: {name:'tableDataTemplate', foreach: company_ratio}"></tbody>

</table>

<div class="row">

</div>

<div class="row" id="graph">

</div>

<script id="tableHeaderTemplate" type="text/html">
    <th>
        <span data-bind="text: DisplayName"></span>
    </th>
</script>

<script id="tableDataTemplate" type="text/html">
    <tr>
        <td data-bind="text: CompanyName"></td>
        <td data-bind="text: SectorName"></td>
        <td data-bind="text: IndustryName"></td>
        <!-- ko foreach: ratios -->
        <td data-bind="text: $data"></td>
        <!-- /ko -->
    </tr>
</script>

<script>

    var margin = { top: 20, right: 20, bottom: 30, left: 40 },
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

    var x = d3.scale.ordinal()
        .rangeRoundBands([0, width], .1);

    var y = d3.scale.linear()
        .rangeRound([height, 0]);

    var color = d3.scale.ordinal()
        .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

    var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left")
        .tickFormat(d3.format(".2s"));

    var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var vm = {
        headers: ko.observableArray(),
        company_ratio: ko.observableArray()
    }

    $(document).ready(function () {
        $.getJSON("/Summary/GetHeaders", function (_headers) {
            vm.headers = ko.observableArray(_headers);

            $.getJSON("/Summary/GetRatios", function (_ratios) {
                vm.company_ratio = ko.observableArray(_ratios);
                ko.applyBindings(vm);
                //$("#companies_table").tablesorter();
                $("#companies_table").DataTable({
                    colReorder: true,
                    dom: 'Bfrtip',
                    buttons: [
                        'copy', 'excel', 'pdf'
                    ]
                });
                //var converted = [];

                //_ratios.forEach(function(d) {
                //    d.ratios.forEach(function(value, i) {

                //    });
                //});

                //_ratios.forEach(function (d) {
                //    console.log(d);
                //    var y0 = 0;
                //    d.companies = d.ratios.map(function (value, i) {
                //        console.log(value); return { name: i, y0: y0, y1: y0 += +d.ratios[i] };
                //    });
                //    d.total = d.companies[d.companies.length - 1].y1;


                //});
                //_ratios.sort(function (a, b) { return b.total - a.total; });

                //x.domain(_ratios.map(function (d) { return d.CompanyName; }));
                //y.domain([0, d3.max(_ratios, function (d) { return d.total; })]);

                //svg.append("g")
                //  .attr("class", "x axis")
                //  .attr("transform", "translate(0," + height + ")")
                //  .call(xAxis);

                //svg.append("g")
                //    .attr("class", "y axis")
                //    .call(yAxis)
                //  .append("text")
                //    .attr("transform", "rotate(-90)")
                //    .attr("y", 6)
                //    .attr("dy", ".71em")
                //    .style("text-anchor", "end")
                //    .text("Population");

                //var state = svg.selectAll(".state")
                //    .data(data)
                //  .enter().append("g")
                //    .attr("class", "g")
                //    .attr("transform", function (d) { return "translate(" + x(d.State) + ",0)"; });

                //state.selectAll("rect")
                //    .data(function (d) { return d.ages; })
                //  .enter().append("rect")
                //    .attr("width", x.rangeBand())
                //    .attr("y", function (d) { return y(d.y1); })
                //    .attr("height", function (d) { return y(d.y0) - y(d.y1); })
                //    .style("fill", function (d) { return color(d.name); });

                //var legend = svg.selectAll(".legend")
                //    .data(color.domain().slice().reverse())
                //  .enter().append("g")
                //    .attr("class", "legend")
                //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                //legend.append("rect")
                //    .attr("x", width - 18)
                //    .attr("width", 18)
                //    .attr("height", 18)
                //    .style("fill", color);

                //legend.append("text")
                //    .attr("x", width - 24)
                //    .attr("y", 9)
                //    .attr("dy", ".35em")
                //    .style("text-anchor", "end")
                //    .text(function (d) { return d; });

            });
        });


    });

</script>